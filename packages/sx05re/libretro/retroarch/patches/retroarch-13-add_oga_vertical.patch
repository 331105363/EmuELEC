--- a/gfx/drivers/oga_gfx.c
+++ b/gfx/drivers/oga_gfx.c
@@ -526,6 +526,11 @@
       oga_surface_t* dst, int dx, int dy, int dw, int dh,
       int rotation, int scale_mode, unsigned int blend)
 {
+   settings_t *settings                 = config_get_ptr();
+   
+   if (settings->bools.video_oga_vertical_enable)
+   rotation = 0;
+   
    rga_info_t s = {
       .fd = src->prime_fd,
       .rect = { sx, sy, sw, sh, src->width, src->height, src->rk_format },
@@ -725,6 +730,11 @@
 
 void oga_set_rotation(void *data, unsigned rotation)
 {
+   settings_t *settings                 = config_get_ptr();
+   
+   if (settings->bools.video_oga_vertical_enable)
+   rotation = 3;
+   
    oga_video_t *vid = (oga_video_t*)data;
    if (!vid)
       return;
--- a/gfx/drivers_context/drm_go2_ctx.c
+++ b/gfx/drivers_context/drm_go2_ctx.c
@@ -295,6 +295,7 @@
 
 static void gfx_ctx_go2_drm_swap_buffers(void *data)
 {
+   settings_t *settings                 = config_get_ptr();
    gfx_ctx_go2_drm_data_t 
       *drm   = (gfx_ctx_go2_drm_data_t*)data;
 
@@ -311,8 +312,8 @@
    if (out_w != src_w || out_h != src_h)
    {
        out_w = out_h * video_driver_get_aspect_ratio();
-       out_w = (out_w > 480) ? 480 : out_w;
-       out_x = (480 - out_w) / 2;
+       out_w = (out_w > 320) ? 320 : out_w;
+       out_x = (320 - out_w) / 2;
        if (out_x < 0)
            out_x = 0;
     }
@@ -321,11 +322,21 @@
    go2_context_swap_buffers(drm->context);
 
    go2_surface_t* surface = go2_context_surface_lock(drm->context);
+
+if (settings->bools.video_oga_vertical_enable) {
+   go2_presenter_post(drm->presenter,
+         surface,
+         src_x, src_y, src_w, src_h,
+         out_y, out_x, out_h, out_w,
+         GO2_ROTATION_DEGREES_0, 2);
+} else {
    go2_presenter_post(drm->presenter,
          surface,
          src_x, src_y, src_w, src_h,
          out_y, out_x, out_h, out_w,
          GO2_ROTATION_DEGREES_270, 2);
+}
+
    go2_context_surface_unlock(drm->context, surface);
 #endif
 }
